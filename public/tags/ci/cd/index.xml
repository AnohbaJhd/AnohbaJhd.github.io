<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>CI/CD on Anohba Jehad</title>
    <link>http://localhost:1313/tags/ci/cd/</link>
    <description>Recent content in CI/CD on Anohba Jehad</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 13 Jul 2025 12:15:56 +0500</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/ci/cd/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Modern Infrastructure – Part 1: Docker</title>
      <link>http://localhost:1313/posts/dockers/</link>
      <pubDate>Sun, 13 Jul 2025 12:15:56 +0500</pubDate>
      <guid>http://localhost:1313/posts/dockers/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;“Build once, run anywhere.”&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;That’s not a dream — that’s Docker.&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;h2 id=&#34;what-is-docker&#34;&gt;What is Docker?&lt;/h2&gt;&#xA;&lt;p&gt;Docker is an open-source platform that allows you to develop, ship, and run applications inside containers. Containers package your app along with its environment, dependencies, and tools — making them portable, lightweight, and consistent across all platforms.&lt;/p&gt;&#xA;&lt;h2 id=&#34;why-docker&#34;&gt;Why Docker?&lt;/h2&gt;&#xA;&lt;p&gt;&lt;strong&gt;Traditional VMs vs Docker&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;Feature&lt;/th&gt;&#xA;          &lt;th&gt;Traditional VM&lt;/th&gt;&#xA;          &lt;th&gt;Docker&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;OS Architecture&lt;/td&gt;&#xA;          &lt;td&gt;Heavy OS per VM&lt;/td&gt;&#xA;          &lt;td&gt;Shared kernel, lightweight&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Boot Time&lt;/td&gt;&#xA;          &lt;td&gt;Slower boot time&lt;/td&gt;&#xA;          &lt;td&gt;Fast boot/startup&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Resource Usage&lt;/td&gt;&#xA;          &lt;td&gt;More resources used&lt;/td&gt;&#xA;          &lt;td&gt;Less CPU/RAM needed&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Portability&lt;/td&gt;&#xA;          &lt;td&gt;Hard to move&lt;/td&gt;&#xA;          &lt;td&gt;Easy to share or deploy&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;p&gt;Use Docker when you want to:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Meet Jenkins: A Guide to Automation</title>
      <link>http://localhost:1313/posts/jenkins/</link>
      <pubDate>Tue, 08 Jul 2025 12:15:56 +0500</pubDate>
      <guid>http://localhost:1313/posts/jenkins/</guid>
      <description>&lt;hr&gt;&#xA;&lt;h2 id=&#34;what-is-jenkins&#34;&gt;What is Jenkins?&lt;/h2&gt;&#xA;&lt;p&gt;&lt;strong&gt;Jenkins&lt;/strong&gt; is an open-source automation tool written in Java. It helps developers build, test, and deploy their software automatically, making &lt;strong&gt;Continuous Integration (CI)&lt;/strong&gt; and &lt;strong&gt;Continuous Delivery (CD)&lt;/strong&gt; possible.&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;CI: Continuous Integration&#xA;Automatically building and testing code whenever changes are pushed. &#xA;CD: Continuous Delivery&#xA; Automatically deploying/releasing the code to production or staging. &#xA;&#xA;Together, CI/CD makes your workflow faster, safer, and hands-free.&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;In simple terms:&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;Jenkins watches your code and runs jobs (like building or testing) whenever you push changes — saving you tons of manual work.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
